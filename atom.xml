<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>路还远着呢！</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-10-01T05:53:26.215Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>wuxiaobai24</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>3Sum</title>
    <link href="http://yoursite.com/2018/02/10/3Sum/"/>
    <id>http://yoursite.com/2018/02/10/3Sum/</id>
    <published>2018-02-10T14:45:38.928Z</published>
    <updated>2017-10-01T05:53:26.215Z</updated>
    
    <content type="html"><![CDATA[<h1 id="3Sum"><a href="#3Sum" class="headerlink" title="3Sum"></a>3Sum</h1><p>觉得立个<code>flag</code>：从今天开始每天在LeetCode刷一道题,今天的是<a href="https://leetcode.com/problems/3sum/description/" target="_blank" rel="noopener">3Sum</a></p><p>题目：</p><blockquote><p>Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.</p><p>Note: The solution set must not contain duplicate triplets.</p><p>For example, given array S = [-1, 0, 1, 2, -1, -4],</p><p>A solution set is:<br>[<br>  [-1, 0, 1],<br>  [-1, -1, 2]<br>]</p></blockquote><p>这个题的坑点有几个：</p><ul><li>它要求的是不同的，但是如果处理的不好的话，是很容易出现相同的。</li><li>第二个是他很容易写出一个O(n^3)的算法，但是好像是跑不过去的。</li></ul><p>接近的大概思路是：</p><ul><li>先对数组进行排序，这样比较好解决第一个坑点</li><li>把他转换成2Sum去做</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; threeSum(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums) &#123;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt; ret;</span><br><span class="line">        sort(nums.begin(),nums.end());      <span class="comment">//先进行排序</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.size() - <span class="number">2</span>;i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> target = -nums[i];          <span class="comment">//转换成求2Sum</span></span><br><span class="line">            <span class="keyword">if</span> (target &lt; <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">int</span> beg = i + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">int</span> end = nums.size() - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span>(beg &lt; end) &#123;</span><br><span class="line">                <span class="keyword">int</span> sum = nums[beg] + nums[end];</span><br><span class="line">                <span class="keyword">if</span> (sum &lt; target)</span><br><span class="line">                    beg++;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (sum &gt; target)</span><br><span class="line">                    end--;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">int</span> n1 = nums[beg];</span><br><span class="line">                    <span class="keyword">int</span> n2 = nums[end];</span><br><span class="line">                    ret.push_back( &#123;nums[i],nums[beg],nums[end]&#125; );</span><br><span class="line">                    <span class="comment">//处理重复</span></span><br><span class="line">                    <span class="keyword">while</span>(beg &lt; end &amp;&amp; nums[beg] == n1) beg++;</span><br><span class="line">                    <span class="keyword">while</span>(beg &lt; end &amp;&amp; nums[end] == n2) end--;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//处理重复</span></span><br><span class="line">            <span class="keyword">while</span>(i + <span class="number">1</span> &lt; nums.size()- <span class="number">2</span> &amp;&amp; nums[i + <span class="number">1</span>] == nums[i])</span><br><span class="line">                i++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;3Sum&quot;&gt;&lt;a href=&quot;#3Sum&quot; class=&quot;headerlink&quot; title=&quot;3Sum&quot;&gt;&lt;/a&gt;3Sum&lt;/h1&gt;&lt;p&gt;觉得立个&lt;code&gt;flag&lt;/code&gt;：从今天开始每天在LeetCode刷一道题,今天的是&lt;a href=&quot;https:
      
    
    </summary>
    
      <category term="LeetCode" scheme="http://yoursite.com/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>Hello My Blog!</title>
    <link href="http://yoursite.com/2018/02/10/hello/"/>
    <id>http://yoursite.com/2018/02/10/hello/</id>
    <published>2018-02-10T14:45:38.928Z</published>
    <updated>2017-09-18T01:19:48.117Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"Hello My Blog!"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>约瑟夫环</title>
    <link href="http://yoursite.com/2018/02/10/%E7%BA%A6%E7%91%9F%E5%A4%AB%E7%8E%AF%E5%AE%9E%E7%8E%B0/"/>
    <id>http://yoursite.com/2018/02/10/约瑟夫环实现/</id>
    <published>2018-02-10T14:45:38.928Z</published>
    <updated>2017-09-28T12:24:51.882Z</updated>
    
    <content type="html"><![CDATA[<p>今天上数据结构实验课，有道题是约瑟夫环，感觉挺好玩的，就拿出来总结一下（今天的LeetCode那道题真的是太Easy了）。</p><blockquote><p>约瑟夫环是一个数学的应用问题：已知n个人（以编号1，2，3…n分别表示）围坐在一张圆桌周围。从编号为k的人开始报数，数到m的那个人出列；他的下一个人又从1开始报数，数到m的那个人又出列；依此规律重复下去，直到圆桌周围的人全部出列。</p></blockquote><p>这里是用双向循环链表实现的：</p><p>先是类的申明：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">JCircle</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ListNode</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> val;</span><br><span class="line">ListNode *next,*prior;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">ListNode(<span class="keyword">int</span> v,ListNode *n = <span class="literal">NULL</span>,ListNode *p = <span class="literal">NULL</span>)</span><br><span class="line">:val(v),next(n),prior(p)&#123;&#125;</span><br><span class="line"><span class="keyword">friend</span> <span class="class"><span class="keyword">class</span> <span class="title">JCircle</span>;</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getVal</span><span class="params">()</span></span>&#123; <span class="keyword">return</span> val; &#125;</span><br><span class="line"><span class="function">ListNode *<span class="title">getNext</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> next; &#125;</span><br><span class="line"><span class="function">ListNode *<span class="title">getPrior</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> prior; &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">JCircle</span>&#123;</span></span><br><span class="line">ListNode *head;</span><br><span class="line"><span class="keyword">int</span> size; </span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">JCircle(<span class="keyword">int</span> n);</span><br><span class="line">~JCircle();</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">move</span><span class="params">(<span class="keyword">int</span> k)</span></span>;<span class="comment">//向前移动k步 </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">del</span><span class="params">()</span></span>;<span class="comment">//删除head所指向的ListNode并返回其 val </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">count</span><span class="params">(<span class="keyword">int</span> k)</span></span>;<span class="comment">//报数 </span></span><br><span class="line"><span class="keyword">friend</span> ostream &amp;<span class="keyword">operator</span>&lt;&lt;(ostream&amp; out,JCircle &amp;jc);</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">empty</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> size == <span class="number">0</span>; &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>类的实现：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">JCircle::JCircle(<span class="keyword">int</span> n)</span><br><span class="line">:head(<span class="literal">NULL</span>),size(<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">if</span> (n &lt;= <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">size = n;</span><br><span class="line">head = <span class="keyword">new</span> ListNode(<span class="number">1</span>,<span class="literal">NULL</span>,<span class="literal">NULL</span>);</span><br><span class="line">head-&gt;next = head;</span><br><span class="line">head-&gt;prior = head;</span><br><span class="line">ListNode *p = head;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>;i &lt;= n;i++) &#123;</span><br><span class="line">p-&gt;next = <span class="keyword">new</span> ListNode(i,p-&gt;next);</span><br><span class="line">p-&gt;next-&gt;prior = p;</span><br><span class="line">p = p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">head-&gt;prior = p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">JCircle::~JCircle()&#123;</span><br><span class="line">ListNode *p;</span><br><span class="line"><span class="keyword">while</span>(size--)&#123;</span><br><span class="line">p = head;</span><br><span class="line">head = head-&gt;next;</span><br><span class="line"><span class="keyword">delete</span> p;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> JCircle::move(<span class="keyword">int</span> k)&#123;</span><br><span class="line"><span class="comment">//cout &lt;&lt; "move";</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; k;i++)</span><br><span class="line">head = head-&gt;next;</span><br><span class="line"><span class="comment">//cout &lt;&lt; " over\n";</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> JCircle::del()&#123;</span><br><span class="line"><span class="keyword">if</span> (size == <span class="number">2</span>)&#123;</span><br><span class="line">ListNode *p = head;</span><br><span class="line"><span class="keyword">int</span> ret = p-&gt;val;</span><br><span class="line">head = head-&gt;next;</span><br><span class="line"><span class="keyword">delete</span> p;</span><br><span class="line">head-&gt;next = head-&gt;prior = head;</span><br><span class="line">size--; </span><br><span class="line"><span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line">size--;</span><br><span class="line">head-&gt;next-&gt;prior = head-&gt;prior;</span><br><span class="line">head-&gt;prior-&gt;next = head-&gt;next;</span><br><span class="line">ListNode *p = head;</span><br><span class="line"><span class="keyword">int</span> t = p-&gt;val;</span><br><span class="line">head = head-&gt;next;</span><br><span class="line"><span class="keyword">delete</span> p;</span><br><span class="line"><span class="keyword">return</span> t;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> JCircle::count(<span class="keyword">int</span> k)&#123;</span><br><span class="line">move(k);</span><br><span class="line"><span class="comment">//cout &lt;&lt; "count";</span></span><br><span class="line"><span class="keyword">return</span> del();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ostream &amp;<span class="keyword">operator</span>&lt;&lt;(ostream&amp; out,JCircle &amp;jc)&#123;</span><br><span class="line">ListNode *p = jc.head;</span><br><span class="line"><span class="keyword">int</span> n = jc.size;</span><br><span class="line"><span class="keyword">while</span>(n--)&#123;</span><br><span class="line">out &lt;&lt; p-&gt;getVal() &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">p = p-&gt;getNext();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//out &lt;&lt; "asdsad\n";</span></span><br><span class="line"><span class="keyword">return</span> out;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>测试：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//test</span></span><br><span class="line"><span class="comment">//人数  开始位置  报数 </span></span><br><span class="line"><span class="keyword">int</span>  n,  k,       m;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; n &gt;&gt; k &gt;&gt; m)&#123;</span><br><span class="line"><span class="function">JCircle <span class="title">jc</span><span class="params">(n)</span></span>;</span><br><span class="line">jc.move(k);</span><br><span class="line"><span class="comment">//cout &lt;&lt; jc &lt;&lt; endl; </span></span><br><span class="line"><span class="keyword">while</span>(!jc.empty())</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; jc.count(m) &lt;&lt; <span class="string">" "</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>想写这个的原因是，我写了很久，事实上回到宿舍写多一遍的时候，我也写了很久（现在是20:16:00），写了一个多小时了，感觉自己还不怎么熟悉一些的基本数据结构（虽然已经在之前的学院上过一次了，恩，相当水的一门课）。</p><p>重写一遍的感觉是，该掉的坑，我还是掉下去了，之前写了的一遍的效果就是，我能比较快的爬出来，而且不会纠结于选择双向链表还是单向链表。</p><p>写的过程中，也体会了一下双向链表的坑点：</p><ul><li><code>size==2</code>时，不能用常规方法<code>delete</code>掉自己。</li><li>加入size会减少一些常见的错误，一些实现敲起来也会简单点（唯一一个一开始就选择正确的点）。</li></ul><p>感觉以后要多总结一些一些基本的数据结构，不然做算法题的时候，会很难找到适合的数据结构。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天上数据结构实验课，有道题是约瑟夫环，感觉挺好玩的，就拿出来总结一下（今天的LeetCode那道题真的是太Easy了）。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;约瑟夫环是一个数学的应用问题：已知n个人（以编号1，2，3…n分别表示）围坐在一张圆桌周围。从编号为k的人开始
      
    
    </summary>
    
      <category term="数据结构" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="循环链表，双向链表，数据结构" scheme="http://yoursite.com/tags/%E5%BE%AA%E7%8E%AF%E9%93%BE%E8%A1%A8%EF%BC%8C%E5%8F%8C%E5%90%91%E9%93%BE%E8%A1%A8%EF%BC%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2018/02/10/hello-world/"/>
    <id>http://yoursite.com/2018/02/10/hello-world/</id>
    <published>2018-02-10T14:45:38.928Z</published>
    <updated>2017-09-17T13:53:54.631Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Search-a-2D-Matrix-II</title>
    <link href="http://yoursite.com/2018/01/27/Search-a-2D-Matrix-II/"/>
    <id>http://yoursite.com/2018/01/27/Search-a-2D-Matrix-II/</id>
    <published>2018-01-27T02:30:43.000Z</published>
    <updated>2018-01-27T02:38:34.981Z</updated>
    
    <content type="html"><![CDATA[<p>第96天。</p><p>今天的题目是<a href="https://leetcode.com/problems/search-a-2d-matrix-ii/description/" target="_blank" rel="noopener">Search a 2D Matrix II</a>:</p><blockquote><p>Write an efficient algorithm that searches for a value in an m x n matrix. This matrix has the following properties:</p><p>Integers in each row are sorted in ascending from left to right.<br>Integers in each column are sorted in ascending from top to bottom.<br>For example,</p><p>Consider the following matrix:</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  [<span class="number">1</span>,   <span class="number">4</span>,  <span class="number">7</span>, <span class="number">11</span>, <span class="number">15</span>],</span><br><span class="line">  [<span class="number">2</span>,   <span class="number">5</span>,  <span class="number">8</span>, <span class="number">12</span>, <span class="number">19</span>],</span><br><span class="line">  [<span class="number">3</span>,   <span class="number">6</span>,  <span class="number">9</span>, <span class="number">16</span>, <span class="number">22</span>],</span><br><span class="line">  [<span class="number">10</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">17</span>, <span class="number">24</span>],</span><br><span class="line">  [<span class="number">18</span>, <span class="number">21</span>, <span class="number">23</span>, <span class="number">26</span>, <span class="number">30</span>]</span><br><span class="line">]</span><br></pre></td></tr></table></figure><blockquote><p>Given target = 5, return true.</p><p>Given target = 20, return false.</p></blockquote><p>以前好像看过这道题，但是应该嫌麻烦没做，今天做了一下，感觉好像也不是很难的样子，二分查找的升级版（在2维情况下）：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">searchMatrix</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;&amp; matrix, <span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = matrix.size();</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">int</span> m = matrix[<span class="number">0</span>].size();</span><br><span class="line">    <span class="keyword">return</span> searchMatrix(matrix,<span class="number">0</span>,n<span class="number">-1</span>,<span class="number">0</span>,m<span class="number">-1</span>,target);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">searchMatrix</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt; &amp;matrix, <span class="keyword">int</span> xlow, <span class="keyword">int</span> xhigh, <span class="keyword">int</span> ylow, <span class="keyword">int</span> yhigh, <span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//cout &lt;&lt; xlow &lt;&lt; " " &lt;&lt; xhigh &lt;&lt; endl</span></span><br><span class="line">    <span class="comment">//   &lt;&lt; ylow &lt;&lt; " " &lt;&lt; yhigh &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (xlow &gt; xhigh || ylow &gt; yhigh) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">int</span> xmid = (xlow + xhigh)/<span class="number">2</span>, ymid = (ylow + yhigh)/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span> (matrix[xmid][ymid] == target) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (matrix[xmid][ymid] &lt; target) </span><br><span class="line">        <span class="keyword">return</span> searchMatrix(matrix,xmid + <span class="number">1</span>, xhigh, ylow, yhigh,target) ||</span><br><span class="line">                searchMatrix(matrix,xlow, xhigh, ymid + <span class="number">1</span>, yhigh, target);</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        <span class="keyword">return</span> searchMatrix(matrix, xlow, xmid<span class="number">-1</span>, ylow, yhigh,target) ||</span><br><span class="line">                searchMatrix(matrix,xlow, xhigh, ylow, ymid<span class="number">-1</span>, target);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为什么<code>dicuss</code>的解法大多都是:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">searchMatrix</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;&amp; matrix, <span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> j = matrix[<span class="number">0</span>].size() - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(i &lt; matrix.size() &amp;&amp; j &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(matrix[i][j] == target)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(matrix[i][j] &lt; target)</span><br><span class="line">            i++;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            j--;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;第96天。&lt;/p&gt;
&lt;p&gt;今天的题目是&lt;a href=&quot;https://leetcode.com/problems/search-a-2d-matrix-ii/description/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Search a 2D 
      
    
    </summary>
    
      <category term="LeetCode" scheme="http://yoursite.com/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>Same-Tree</title>
    <link href="http://yoursite.com/2018/01/26/Same-Tree/"/>
    <id>http://yoursite.com/2018/01/26/Same-Tree/</id>
    <published>2018-01-26T03:44:17.000Z</published>
    <updated>2018-01-26T03:46:32.902Z</updated>
    
    <content type="html"><![CDATA[<p>第95天。</p><p>今天的题目比较水。</p><p>今天的题目是<a href="https://leetcode.com/problems/same-tree/description/" target="_blank" rel="noopener">Same Tree</a>:</p><blockquote><p>Given two binary trees, write a function to check if they are the same or not.</p><p>Two binary trees are considered the same if they are structurally identical and the nodes have the same value.</p></blockquote><p>太简单了，不做太多解释了:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isSameTree</span><span class="params">(TreeNode* p, TreeNode* q)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (p == <span class="literal">nullptr</span> &amp;&amp; q == <span class="literal">nullptr</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (p &amp;&amp; q) &#123;</span><br><span class="line">        <span class="keyword">return</span> q-&gt;val == p-&gt;val &amp;&amp; isSameTree(p-&gt;left,q-&gt;left) &amp;&amp; isSameTree(p-&gt;right,q-&gt;right);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;第95天。&lt;/p&gt;
&lt;p&gt;今天的题目比较水。&lt;/p&gt;
&lt;p&gt;今天的题目是&lt;a href=&quot;https://leetcode.com/problems/same-tree/description/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Same Tr
      
    
    </summary>
    
      <category term="LeetCode" scheme="http://yoursite.com/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>Nim-Game</title>
    <link href="http://yoursite.com/2018/01/25/Nim-Game/"/>
    <id>http://yoursite.com/2018/01/25/Nim-Game/</id>
    <published>2018-01-25T02:52:41.000Z</published>
    <updated>2018-01-25T02:55:57.268Z</updated>
    
    <content type="html"><![CDATA[<p>第94天。</p><p>今天的题目有点智障。。。</p><p>今天的题目是<a href="https://leetcode.com/problems/nim-game/description/" target="_blank" rel="noopener">Nim Game</a>:</p><blockquote><p>You are playing the following Nim Game with your friend: There is a heap of stones on the table, each time one of you take turns to remove 1 to 3 stones. The one who removes the last stone will be the winner. You will take the first turn to remove the stones.</p><p>Both of you are very clever and have optimal strategies for the game. Write a function to determine whether you can win the game given the number of stones in the heap.</p><p>For example, if there are 4 stones in the heap, then you will never win the game: no matter 1, 2, or 3 stones you remove, the last stone will always be removed by your friend.</p></blockquote><p>很自然的想到用<code>dp</code>去做，然而时间超限了：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">canWinNim1</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n &lt;= <span class="number">3</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">bool</span>&gt; dp(n+<span class="number">1</span>,<span class="literal">false</span>);</span><br><span class="line">    dp[<span class="number">1</span>] = dp[<span class="number">2</span>] = dp[<span class="number">3</span>] = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">4</span>;i &lt;= n;i++) &#123;</span><br><span class="line">        dp[i] = !(dp[i<span class="number">-1</span>] &amp;&amp; dp[i<span class="number">-2</span>] &amp;&amp; dp[i<span class="number">-3</span>]);</span><br><span class="line">   <span class="comment">//     if (dp[i] == false) cout &lt;&lt; i &lt;&lt; " ";</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// cout &lt;&lt; endl;</span></span><br><span class="line">    <span class="keyword">return</span> dp[n];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>把<code>false</code>的值输出来之后，发现，只要不是4的倍数就会赢。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">canWinNim</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> n % <span class="number">4</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;第94天。&lt;/p&gt;
&lt;p&gt;今天的题目有点智障。。。&lt;/p&gt;
&lt;p&gt;今天的题目是&lt;a href=&quot;https://leetcode.com/problems/nim-game/description/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Nim G
      
    
    </summary>
    
      <category term="LeetCode" scheme="http://yoursite.com/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>Construct-the-Rectangle</title>
    <link href="http://yoursite.com/2018/01/24/Construct-the-Rectangle/"/>
    <id>http://yoursite.com/2018/01/24/Construct-the-Rectangle/</id>
    <published>2018-01-24T04:36:36.000Z</published>
    <updated>2018-01-24T04:55:05.345Z</updated>
    
    <content type="html"><![CDATA[<p>第93天。</p><p>今天的题目是<a href="https://leetcode.com/problems/construct-the-rectangle/discuss/" target="_blank" rel="noopener">Construct the Rectangle</a>:</p><blockquote><p>For a web developer, it is very important to know how to design a web page’s size. So, given a specific rectangular web page’s area, your job by now is to design a rectangular web page, whose length L and width W satisfy the following requirements:</p><ol><li><p>The area of the rectangular web page you designed must equal to the given target area.</p></li><li><p>The width W should not be larger than the length L, which means L &gt;= W.</p></li><li><p>The difference between length L and width W should be as small as possible.<br>You need to output the length L and the width W of the web page you designed in sequence.<br>Example:<br>Input: 4<br>Output: [2, 2]<br>Explanation: The target area is 4, and all the possible ways to construct it are [1,4], [2,2], [4,1].<br>But according to requirement 2, [1,4] is illegal; according to requirement 3,  [4,1] is not optimal compared to [2,2]. So the length L is 2, and the width W is 2.<br>Note:<br>The given area won’t exceed 10,000,000 and is a positive integer<br>The web page’s width and length you designed must be positive integers.</p></li></ol></blockquote><p>比较简单的题目，但是题目有点长，总结一下就是，你要求出<code>L</code>,<code>W</code>满足一下条件：</p><ol><li>L, W is int</li><li>L*W=Area</li><li>L &gt;= W &gt; 0</li><li>min |L-W|</li></ol><p>既然要使得<code>|L-W|</code>最小，那么显然，<code>L=W=sqrt(Area)</code>时，<code>L-W</code>是最小的，但是因为<code>L</code>和<code>W</code>限制成整数了,且<code>sqrt(Area)</code>不一定是整数，如果把它转换成<code>int</code>的话，<code>L*W</code>不一定等于<code>Area</code>了。所以我们必须调整<code>L</code>和<code>W</code>的值，简单的调整方法就是，如果<code>L*W &lt; Area</code>,我们就加大<code>L</code>之所以是加大<code>L</code>而不是加大<code>W</code>的原因是需要满足<code>L &gt;= W</code>，同理<code>L*W &gt; Area</code>时，我们就减小<code>W</code>。这样子我们始终会找到一个<code>L,W</code>满足上面的条件：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; constructRectangle(<span class="keyword">int</span> area) &#123;</span><br><span class="line">    <span class="keyword">int</span> L, W;</span><br><span class="line">    <span class="keyword">int</span> sqrt_a = <span class="built_in">sqrt</span>(area);</span><br><span class="line">    W = L = sqrt_a;</span><br><span class="line">    <span class="keyword">int</span> a = W*L;</span><br><span class="line">    <span class="keyword">while</span>(a != area) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a &lt; area) L++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (a &gt; area) W--;</span><br><span class="line">        a = W*L;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> &#123;L, W&#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后<code>dicuss</code>中的解法更巧妙一点，我们只求<code>W</code>，然后<code>L = Area/W</code>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[] constructRectangle(<span class="keyword">int</span> area) &#123;</span><br><span class="line">    <span class="keyword">int</span> w = (<span class="keyword">int</span>)Math.sqrt(area);</span><br><span class="line">    <span class="keyword">while</span> (area%w!=<span class="number">0</span>) w--;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;area/w, w&#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;第93天。&lt;/p&gt;
&lt;p&gt;今天的题目是&lt;a href=&quot;https://leetcode.com/problems/construct-the-rectangle/discuss/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Construct the 
      
    
    </summary>
    
      <category term="LeetCode" scheme="http://yoursite.com/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>Rotate-Image</title>
    <link href="http://yoursite.com/2018/01/23/Rotate-Image/"/>
    <id>http://yoursite.com/2018/01/23/Rotate-Image/</id>
    <published>2018-01-23T04:28:20.000Z</published>
    <updated>2018-01-23T04:36:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>第92天。</p><p>今天的题目是<a href="https://leetcode.com/problems/rotate-image/description/" target="_blank" rel="noopener">Rotate Image</a>:</p><blockquote><p>You are given an n x n 2D matrix representing an image.</p><p>Rotate the image by 90 degrees (clockwise).</p><p>Note:<br>You have to rotate the image in-place, which means you have to modify the input 2D matrix directly. DO NOT allocate another 2D matrix and do the rotation.</p><p>Example 1:</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Given input matrix = </span><br><span class="line">[</span><br><span class="line">  [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],</span><br><span class="line">  [<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>],</span><br><span class="line">  [<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>]</span><br><span class="line">],</span><br><span class="line"></span><br><span class="line">rotate the input matrix <span class="keyword">in</span>-place such that it becomes:</span><br><span class="line">[</span><br><span class="line">  [<span class="number">7</span>,<span class="number">4</span>,<span class="number">1</span>],</span><br><span class="line">  [<span class="number">8</span>,<span class="number">5</span>,<span class="number">2</span>],</span><br><span class="line">  [<span class="number">9</span>,<span class="number">6</span>,<span class="number">3</span>]</span><br><span class="line">]</span><br></pre></td></tr></table></figure><blockquote><p>Example 2:</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Given input matrix =</span><br><span class="line">[</span><br><span class="line">  [ <span class="number">5</span>, <span class="number">1</span>, <span class="number">9</span>,<span class="number">11</span>],</span><br><span class="line">  [ <span class="number">2</span>, <span class="number">4</span>, <span class="number">8</span>,<span class="number">10</span>],</span><br><span class="line">  [<span class="number">13</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">7</span>],</span><br><span class="line">  [<span class="number">15</span>,<span class="number">14</span>,<span class="number">12</span>,<span class="number">16</span>]</span><br><span class="line">], </span><br><span class="line"></span><br><span class="line">rotate the input matrix <span class="keyword">in</span>-place such that it becomes:</span><br><span class="line">[</span><br><span class="line">  [<span class="number">15</span>,<span class="number">13</span>, <span class="number">2</span>, <span class="number">5</span>],</span><br><span class="line">  [<span class="number">14</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">1</span>],</span><br><span class="line">  [<span class="number">12</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">9</span>],</span><br><span class="line">  [<span class="number">16</span>, <span class="number">7</span>,<span class="number">10</span>,<span class="number">11</span>]</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>虽然是一道<code>Medium</code>的题目，但是还是比较简单的。</p><p>主要的思路是一圈一圈的进行旋转，不断缩减，直到不需要旋转的时候：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rotate</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;&amp; matrix)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> beg = <span class="number">0</span>, end = matrix.size() - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> temp;</span><br><span class="line">    <span class="keyword">while</span>(beg &lt; end) &#123;</span><br><span class="line">        <span class="keyword">int</span> size = end - beg;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; size;i++) &#123;</span><br><span class="line">            temp = matrix[beg+i][beg];</span><br><span class="line">            matrix[beg+i][beg] = matrix[end][beg+i];</span><br><span class="line">            matrix[end][beg+i] = matrix[end-i][end];</span><br><span class="line">            matrix[end-i][end] = matrix[beg][end-i];</span><br><span class="line">            matrix[beg][end-i] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">        beg++; end--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;第92天。&lt;/p&gt;
&lt;p&gt;今天的题目是&lt;a href=&quot;https://leetcode.com/problems/rotate-image/description/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Rotate Image&lt;/a&gt;:&lt;/p&gt;
      
    
    </summary>
    
      <category term="LeetCode" scheme="http://yoursite.com/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>Repeated-Substring-Pattern</title>
    <link href="http://yoursite.com/2018/01/22/Repeated-Substring-Pattern/"/>
    <id>http://yoursite.com/2018/01/22/Repeated-Substring-Pattern/</id>
    <published>2018-01-22T02:54:49.000Z</published>
    <updated>2018-01-22T02:59:53.787Z</updated>
    
    <content type="html"><![CDATA[<p>第91天。</p><p>今天的题目是<a href="https://leetcode.com/problems/repeated-substring-pattern/description/" target="_blank" rel="noopener">Repeated Substring Pattern</a>:</p><blockquote><p>Given a non-empty string check if it can be constructed by taking a substring of it and appending multiple copies of the substring together. You may assume the given string consists of lowercase English letters only and its length will not exceed 10000.<br>Example 1:<br>Input: “abab”</p><p>Output: True</p><p>Explanation: It’s the substring “ab” twice.<br>Example 2:<br>Input: “aba”</p><p>Output: False<br>Example 3:<br>Input: “abcabcabcabc”</p><p>Output: True</p><p>Explanation: It’s the substring “abc” four times. (And the substring “abcabc” twice.)</p></blockquote><p>一开始没看清，以为只有重复一次的情况，后来发现还可以重复多次，这样的话就不得不多扫描几遍了,有点希尔排序的解法：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">repeatedSubstringPattern1</span><span class="params">(<span class="built_in">string</span> s)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; s.size();i++)</span><br><span class="line">        <span class="keyword">if</span> (repeatedSubstringPattern(s,i)) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">repeatedSubstringPattern</span><span class="params">(<span class="built_in">string</span> &amp;s,<span class="keyword">int</span> p)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// cout &lt;&lt; p &lt;&lt; endl;</span></span><br><span class="line">    <span class="keyword">int</span> size = s.size();</span><br><span class="line">    <span class="keyword">if</span> (size % p) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; p;i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = i+p;j &lt; size;j += p) &#123;</span><br><span class="line">            <span class="comment">//cout &lt;&lt; s[i] &lt;&lt; " " &lt;&lt; s[j] &lt;&lt; endl;</span></span><br><span class="line">            <span class="keyword">if</span> (s[i] != s[j]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后是在<code>dicuss</code>中的利用<code>kmp</code>的解法，但我还是没看懂为什么可以这样做。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">repeatedSubstringPattern</span><span class="params">(<span class="built_in">string</span> str)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">1</span>, j = <span class="number">0</span>, n = str.size();</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; dp(n+<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">while</span>( i &lt; str.size() )&#123;</span><br><span class="line">        <span class="keyword">if</span>( str[i] == str[j] ) dp[++i]=++j;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>( j == <span class="number">0</span> ) i++;</span><br><span class="line">        <span class="keyword">else</span> j = dp[j];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dp[n]&amp;&amp;dp[n]%(n-dp[n])==<span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;第91天。&lt;/p&gt;
&lt;p&gt;今天的题目是&lt;a href=&quot;https://leetcode.com/problems/repeated-substring-pattern/description/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Repeate
      
    
    </summary>
    
      <category term="LeetCode" scheme="http://yoursite.com/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>Linked-List-Random-Node</title>
    <link href="http://yoursite.com/2018/01/21/Linked-List-Random-Node/"/>
    <id>http://yoursite.com/2018/01/21/Linked-List-Random-Node/</id>
    <published>2018-01-21T02:45:53.000Z</published>
    <updated>2018-01-21T02:59:25.297Z</updated>
    
    <content type="html"><![CDATA[<p>第90天。</p><p>今天的题目是<a href="https://leetcode.com/problems/linked-list-random-node/description/" target="_blank" rel="noopener">Linked List Random Node</a>:</p><blockquote><p>Given a singly linked list, return a random node’s value from the linked list. Each node must have the same probability of being chosen.</p><p>Follow up:<br>What if the linked list is extremely large and its length is unknown to you? Could you solve this efficiently without using extra space?</p><p>Example:</p><p>// Init a singly linked list [1,2,3].<br>ListNode head = new ListNode(1);<br>head.next = new ListNode(2);<br>head.next.next = new ListNode(3);<br>Solution solution = new Solution(head);</p><p>// getRandom() should return either 1, 2, or 3 randomly. Each element should have equal probability of returning.<br>solution.getRandom();</p></blockquote><p>写出了一个朴素的解法，两次扫描：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">Solution(ListNode* p) &#123;</span><br><span class="line">    len = <span class="number">0</span>;</span><br><span class="line">    head = p;</span><br><span class="line">    <span class="keyword">while</span>(p) &#123;</span><br><span class="line">        len++;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; len &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns a random node's value. */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getRandom</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> r = rand() % len;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; r &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    ListNode *p = head;</span><br><span class="line">    <span class="keyword">while</span>(r-- &amp;&amp; p) &#123;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> p-&gt;val;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> len;</span><br><span class="line">ListNode *head;</span><br></pre></td></tr></table></figure><p>然后是利用栈来做的一个解法，即一直递归调用直到链表结尾，这时我们已经遍历了一遍链表就可以知道其长度了，在这时生成随机数，然后在递归调用返回的时候通过这个随机数来选取节点：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getRandom</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    temp_len = <span class="number">0</span>;</span><br><span class="line">    getRandom(head);</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">getRandom</span><span class="params">(ListNode *p)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (p == <span class="literal">nullptr</span>) &#123;</span><br><span class="line">        rand_n = rand() % temp_len;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    temp_len++;</span><br><span class="line">    <span class="keyword">if</span>(getRandom(p-&gt;next)) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span> (rand_n == <span class="number">0</span>) &#123;</span><br><span class="line">        res = p-&gt;val;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    rand_n--;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> temp_len;</span><br><span class="line"><span class="keyword">int</span> rand_n;</span><br><span class="line">ListNode *head;</span><br><span class="line"><span class="keyword">int</span> res;</span><br></pre></td></tr></table></figure><p>最后是<code>dicuss</code>中的水库抽样法：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getRandom</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = head-&gt;val;</span><br><span class="line">    ListNode* node = head-&gt;next;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">while</span>(node)&#123;</span><br><span class="line">        <span class="keyword">int</span> j = rand()%i;</span><br><span class="line">        <span class="keyword">if</span>(j==<span class="number">0</span>)</span><br><span class="line">            res = node-&gt;val;</span><br><span class="line">        i++;</span><br><span class="line">        node = node-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>证明可参考：<a href="http://blog.csdn.net/so_geili/article/details/52937212" target="_blank" rel="noopener">http://blog.csdn.net/so_geili/article/details/52937212</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;第90天。&lt;/p&gt;
&lt;p&gt;今天的题目是&lt;a href=&quot;https://leetcode.com/problems/linked-list-random-node/description/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Linked Lis
      
    
    </summary>
    
      <category term="LeetCode" scheme="http://yoursite.com/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>Binary-Tree-Paths</title>
    <link href="http://yoursite.com/2018/01/20/Binary-Tree-Paths/"/>
    <id>http://yoursite.com/2018/01/20/Binary-Tree-Paths/</id>
    <published>2018-01-20T02:24:03.000Z</published>
    <updated>2018-01-20T02:26:43.135Z</updated>
    
    <content type="html"><![CDATA[<p>第89天。</p><p>今天的题目是<a href="https://leetcode.com/problems/binary-tree-paths/description/" target="_blank" rel="noopener">Binary-Tree-Paths</a>:</p><blockquote><p>Given a binary tree, return all root-to-leaf paths.</p><p>For example, given the following binary tree:</p><p>   1<br> /   \<br>2     3<br> \<br>  5<br>All root-to-leaf paths are:</p><p>[“1-&gt;2-&gt;5”, “1-&gt;3”]</p></blockquote><p>比较的简单的题目，直接用递归做就好了，因为<code>python</code>写起来比较简单，所以这里用<code>python</code>实现：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">binaryTreePaths</span><span class="params">(self, root)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    :type root: TreeNode</span></span><br><span class="line"><span class="string">    :rtype: List[str]</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    self.ret = []</span><br><span class="line">    <span class="keyword">if</span> root <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">        <span class="keyword">return</span> self.ret</span><br><span class="line">    s = []</span><br><span class="line">    self.binaryTreePathsRec(root,s)</span><br><span class="line">    <span class="keyword">return</span> self.ret</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">binaryTreePathsRec</span><span class="params">(self,root,s)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> root <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    s.append(str(root.val))</span><br><span class="line">    <span class="keyword">if</span> root.left <span class="keyword">is</span> <span class="keyword">None</span> <span class="keyword">and</span> root.right <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">        self.ret.append(<span class="string">'-&gt;'</span>.join(s))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        self.binaryTreePathsRec(root.left,s)</span><br><span class="line">        self.binaryTreePathsRec(root.right,s)</span><br><span class="line">    s.pop()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;第89天。&lt;/p&gt;
&lt;p&gt;今天的题目是&lt;a href=&quot;https://leetcode.com/problems/binary-tree-paths/description/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Binary-Tree-Path
      
    
    </summary>
    
      <category term="LeetCode" scheme="http://yoursite.com/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>Split-Linked-List-in-Parts</title>
    <link href="http://yoursite.com/2018/01/19/Split-Linked-List-in-Parts/"/>
    <id>http://yoursite.com/2018/01/19/Split-Linked-List-in-Parts/</id>
    <published>2018-01-19T03:34:09.000Z</published>
    <updated>2018-01-19T03:43:08.968Z</updated>
    
    <content type="html"><![CDATA[<p>第88天。</p><p>今天的题目是<a href="https://leetcode.com/problems/split-linked-list-in-parts/description/" target="_blank" rel="noopener">Split Linked List in Parts</a>:</p><blockquote><p>Given a (singly) linked list with head node root, write a function to split the linked list into k consecutive linked list “parts”.</p><p>The length of each part should be as equal as possible: no two parts should have a size differing by more than 1. This may lead to some parts being null.</p><p>The parts should be in order of occurrence in the input list, and parts occurring earlier should always have a size greater than or equal parts occurring later.</p><p>Return a List of ListNode’s representing the linked list parts that are formed.</p><p>Examples 1-&gt;2-&gt;3-&gt;4, k = 5 // 5 equal parts [ [1], [2], [3], [4], null ]<br>Example 1:<br>Input:<br>root = [1, 2, 3], k = 5<br>Output: [[1],[2],[3],[],[]]<br>Explanation:<br>The input and each element of the output are ListNodes, not arrays.<br>For example, the input root has root.val = 1, root.next.val = 2, \root.next.next.val = 3, and root.next.next.next = null.<br>The first element output[0] has output[0].val = 1, output[0].next = null.<br>The last element output[4] is null, but it’s string representation as a ListNode is [].<br>Example 2:<br>Input:<br>root = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], k = 3<br>Output: [[1, 2, 3, 4], [5, 6, 7], [8, 9, 10]]<br>Explanation:<br>The input has been split into consecutive parts with size difference at most 1, and earlier parts are a larger size than the later parts.<br>Note:</p><p>The length of root will be in the range [0, 1000].<br>Each value of a node in the input will be an integer in the range [0, 999].<br>k will be an integer in the range [1, 50].</p></blockquote><p>虽然不难，但是自己还是做了一个早上，现在的效率真的是低的可以。</p><p>首先要知道每个块要有多少个节点就必须先知道总共有多少个节点，所以第一遍扫描算节点数肯定是少不了的，然后就可以开始算每个块的个数了。</p><ul><li><code>k&gt;=n</code>时，显然前n块只需要放一个就好了，后面的不用管。</li><li><code>k&lt;n</code>时，可以分成两部分，前面的一部分比后面的一部分多放一个块，穷举几次可以知道，后面的部分每个快放<code>n/k</code>个节点，前面的部分有<code>n%k</code>个块。</li></ul><p>其实到这里就可以发现其实并不需要分情况,第二种已经包括了第一种了。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">vector</span>&lt;ListNode*&gt; splitListToParts(ListNode* root, <span class="keyword">int</span> k) &#123;</span><br><span class="line">    <span class="keyword">int</span> size = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(ListNode *p = root;p != <span class="literal">nullptr</span>;p=p-&gt;next) size++;</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">vector</span>&lt;ListNode *&gt; ret(k,<span class="literal">nullptr</span>);</span><br><span class="line">    <span class="keyword">int</span> a = size/k;</span><br><span class="line">    <span class="keyword">int</span> b = size%k;</span><br><span class="line"></span><br><span class="line">    ListNode *pre = <span class="literal">nullptr</span>;</span><br><span class="line">    ListNode *p = root;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; k &amp;&amp; p;i++) &#123;</span><br><span class="line">        ret[i] = p;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; a + (b&gt;<span class="number">0</span>);j++) &#123;</span><br><span class="line">            pre = p;</span><br><span class="line">            p = p-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        b--;</span><br><span class="line">        pre-&gt;next = <span class="literal">nullptr</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;第88天。&lt;/p&gt;
&lt;p&gt;今天的题目是&lt;a href=&quot;https://leetcode.com/problems/split-linked-list-in-parts/description/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Split L
      
    
    </summary>
    
      <category term="LeetCode" scheme="http://yoursite.com/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>Min-Cost-Climbing-Stairs</title>
    <link href="http://yoursite.com/2018/01/18/Min-Cost-Climbing-Stairs/"/>
    <id>http://yoursite.com/2018/01/18/Min-Cost-Climbing-Stairs/</id>
    <published>2018-01-18T01:47:16.000Z</published>
    <updated>2018-01-18T01:56:54.095Z</updated>
    
    <content type="html"><![CDATA[<p>第87天。</p><p>今天的题目是<a href="https://leetcode.com/problems/min-cost-climbing-stairs/description/" target="_blank" rel="noopener">Min Cost Climbing Stairs</a>：</p><blockquote><p>On a staircase, the i-th step has some non-negative cost cost[i] assigned (0 indexed).</p><p>Once you pay the cost, you can either climb one or two steps. You need to find minimum cost to reach the top of the floor, and you can either start from the step with index 0, or the step with index 1.</p><p>Example 1:<br>Input: cost = [10, 15, 20]<br>Output: 15<br>Explanation: Cheapest is start on cost[1], pay that cost and go to the top.<br>Example 2:<br>Input: cost = [1, 100, 1, 1, 1, 100, 1, 1, 100, 1]<br>Output: 6<br>Explanation: Cheapest is start on cost[0], and only step on 1s, skipping cost[3].<br>Note:<br>cost will have a length in the range [2, 1000].<br>Every cost[i] will be an integer in the range [0, 999].</p></blockquote><p>比较简单的动态规划题，emmm，爬楼梯的升级：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">minCostClimbingStairs</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; cost)</span> </span>&#123;</span><br><span class="line">    cost.push_back(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> n = cost.size();</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; dp(n+<span class="number">2</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>;i &lt; n+<span class="number">2</span>;i++) &#123;</span><br><span class="line">        dp[i] = min(dp[i<span class="number">-1</span>],dp[i<span class="number">-2</span>]) + cost[i<span class="number">-2</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dp[n+<span class="number">1</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以做一些简化:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">minCostClimbingStairs</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; cost)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = cost.size();</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; dp(n,<span class="number">0</span>);</span><br><span class="line">    dp[<span class="number">0</span>] = cost[<span class="number">0</span>];</span><br><span class="line">    dp[<span class="number">1</span>] = cost[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i++) &#123;</span><br><span class="line">        dp[i] = min(dp[i<span class="number">-1</span>],dp[i<span class="number">-2</span>]) + cost[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> min(dp[n<span class="number">-1</span>],dp[n<span class="number">-2</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>甚至，如果cost可以修改的话，我们还可以把<code>dp</code>也省下来:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">minCostClimbingStairs</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; cost)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = cost.size();</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &amp;dp = cost;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i++) &#123;</span><br><span class="line">        dp[i] = min(dp[i<span class="number">-1</span>],dp[i<span class="number">-2</span>]) + cost[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> min(dp[n<span class="number">-1</span>],dp[n<span class="number">-2</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;第87天。&lt;/p&gt;
&lt;p&gt;今天的题目是&lt;a href=&quot;https://leetcode.com/problems/min-cost-climbing-stairs/description/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Min Cost 
      
    
    </summary>
    
      <category term="LeetCode" scheme="http://yoursite.com/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
      <category term="DP" scheme="http://yoursite.com/tags/DP/"/>
    
  </entry>
  
  <entry>
    <title>Rectangle-Area</title>
    <link href="http://yoursite.com/2018/01/17/Rectangle-Area/"/>
    <id>http://yoursite.com/2018/01/17/Rectangle-Area/</id>
    <published>2018-01-17T04:35:45.000Z</published>
    <updated>2018-01-17T04:46:23.498Z</updated>
    
    <content type="html"><![CDATA[<p>第86天。</p><p>今天的题目是<a href="https://leetcode.com/problems/rectangle-area/description/" target="_blank" rel="noopener">Rectangle Area</a>:</p><blockquote><p>Find the total area covered by two rectilinear rectangles in a 2D plane.</p><p>Each rectangle is defined by its bottom left corner and top right corner as shown in the figure.<br><img src="https://leetcode.com/static/images/problemset/rectangle_area.png" alt=""><br>Assume that the total area is never beyond the maximum possible value of int.</p></blockquote><p>一开始以为是求两个矩形重合部分的面积，后来仔细看了一下才发现是求它们的覆盖面积，好在把重合部分面积求出来后，求他们覆盖面积也比较简单，只需要先求出两个矩形的面积和之后再减去重合部分的面积就可以得到覆盖面积了。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">area</span><span class="params">(<span class="keyword">int</span> A,<span class="keyword">int</span> B,<span class="keyword">int</span> C,<span class="keyword">int</span> D)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (C-A)*(D-B);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">intersect</span><span class="params">(<span class="keyword">int</span> A, <span class="keyword">int</span> B, <span class="keyword">int</span> C, <span class="keyword">int</span> D, <span class="keyword">int</span> E, <span class="keyword">int</span> F, <span class="keyword">int</span> G, <span class="keyword">int</span> H)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//求重合部分的面积</span></span><br><span class="line">    <span class="keyword">if</span> (!check(A, B, C, D, E, F, G, H)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> min(min(C-E,G-A),min(G-E,C-A)) * min(min(D-F,H-B),min(D-B,H-F));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">computeArea</span><span class="params">(<span class="keyword">int</span> A, <span class="keyword">int</span> B, <span class="keyword">int</span> C, <span class="keyword">int</span> D, <span class="keyword">int</span> E, <span class="keyword">int</span> F, <span class="keyword">int</span> G, <span class="keyword">int</span> H)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a1 = area(A, B, C, D);</span><br><span class="line">    <span class="keyword">int</span> a2 = area(E, F, G, H);</span><br><span class="line">    <span class="comment">//cout &lt;&lt; a1 &lt;&lt; " " &lt;&lt; a2 &lt;&lt; endl;</span></span><br><span class="line">    <span class="keyword">return</span> a1- intersect(A, B, C, D, E, F, G, H) + a2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> A, <span class="keyword">int</span> B, <span class="keyword">int</span> C, <span class="keyword">int</span> D, <span class="keyword">int</span> E, <span class="keyword">int</span> F, <span class="keyword">int</span> G, <span class="keyword">int</span> H)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//判断是否重合</span></span><br><span class="line">    <span class="keyword">return</span> ( <span class="built_in">abs</span>(A+C-E-G) &lt;= (<span class="built_in">abs</span>(A-C) + <span class="built_in">abs</span>(G-E)) )&amp;&amp; (<span class="built_in">abs</span>(B+D-F-H) &lt;= (<span class="built_in">abs</span>(D-B) + <span class="built_in">abs</span>(H-F))); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后是<code>dicuss</code>中比较简洁的解法：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">computeArea</span><span class="params">(<span class="keyword">int</span> A, <span class="keyword">int</span> B, <span class="keyword">int</span> C, <span class="keyword">int</span> D, <span class="keyword">int</span> E, <span class="keyword">int</span> F, <span class="keyword">int</span> G, <span class="keyword">int</span> H)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> left = max(A,E), right = max(min(C,G), left);</span><br><span class="line">    <span class="keyword">int</span> bottom = max(B,F), top = max(min(D,H), bottom);</span><br><span class="line">    <span class="keyword">return</span> (C-A)*(D-B) - (right-left)*(top-bottom) + (G-E)*(H-F);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;第86天。&lt;/p&gt;
&lt;p&gt;今天的题目是&lt;a href=&quot;https://leetcode.com/problems/rectangle-area/description/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Rectangle Area&lt;/a&gt;:
      
    
    </summary>
    
      <category term="LeetCode" scheme="http://yoursite.com/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>Longest-Palindrome</title>
    <link href="http://yoursite.com/2018/01/16/Longest-Palindrome/"/>
    <id>http://yoursite.com/2018/01/16/Longest-Palindrome/</id>
    <published>2018-01-16T01:28:28.000Z</published>
    <updated>2018-01-16T01:54:37.850Z</updated>
    
    <content type="html"><![CDATA[<p>第85天。</p><p>今天的题目是<a href="https://leetcode.com/problems/longest-palindrome/description/" target="_blank" rel="noopener">Longest Palindrome</a>:</p><blockquote><p>Given a string which consists of lowercase or uppercase letters, find the length of the longest palindromes that can be built with those letters.</p><p>This is case sensitive, for example “Aa” is not considered a palindrome here.</p><p>Note:<br>Assume the length of given string will not exceed 1,010.</p><p>Example:</p><p>Input:<br>“abccccdd”</p><p>Output:<br>7</p><p>Explanation:<br>One longest palindrome that can be built is “dccaccd”, whose length is 7.</p></blockquote><p>这里有一点比较好玩的就是，他问的是能用这里字母组成的最长回文，所以他给的字符串顺序是不重要的，我们可以先用<code>unordered_map</code>先统计各个字母的个数，然后利用这些个数来计算即可。</p><p>先考虑回文长度是偶数的情况，一个字母要出现在回文中，就必须保证偶数个字母一起出现，这样的话我们就可以这样来计算了：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> &amp;p:wcount) ret += (p.second / <span class="number">2</span>);</span><br><span class="line">    ret *= <span class="number">2</span>;</span><br></pre></td></tr></table></figure><p>然后考虑奇数的情况，从它给的示例中我们很容易的发现，奇数的情况就是偶数的情况加一，当然也可能不加一，因为可以字母不够用。所以我们可以写出以下解法：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">longestPalindrome</span><span class="params">(<span class="built_in">string</span> s)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">unordered_map</span>&lt;<span class="keyword">char</span>,<span class="keyword">int</span>&gt; wcount;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> &amp;c:s) wcount[c]++;</span><br><span class="line">    <span class="keyword">int</span> ret = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> &amp;p:wcount) ret += (p.second / <span class="number">2</span>);</span><br><span class="line">    ret *= <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">return</span> (ret &lt; s.size())?ret+<span class="number">1</span>:ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>还可以更快一点，把除法和乘法去掉：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">longestPalindrome</span><span class="params">(<span class="built_in">string</span> s)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">unordered_map</span>&lt;<span class="keyword">char</span>,<span class="keyword">int</span>&gt; wcount;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> &amp;c:s) wcount[c]++;</span><br><span class="line">    <span class="keyword">int</span> ret = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> &amp;p:wcount) ret += ((p.second % <span class="number">2</span>)?p.second<span class="number">-1</span>:p.second);</span><br><span class="line">    <span class="keyword">return</span> (ret &lt; s.size())?ret+<span class="number">1</span>:ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>dicuss</code>有一个解法比较有趣，他是通过数出现奇数次的字母来实现的：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">longestPalindrome</span><span class="params">(<span class="built_in">string</span> s)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> odds = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">char</span> c=<span class="string">'A'</span>; c&lt;=<span class="string">'z'</span>; c++)</span><br><span class="line">        odds += count(s.begin(), s.end(), c) &amp; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> s.size() - odds + (odds &gt; <span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;第85天。&lt;/p&gt;
&lt;p&gt;今天的题目是&lt;a href=&quot;https://leetcode.com/problems/longest-palindrome/description/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Longest Palindr
      
    
    </summary>
    
      <category term="LeetCode" scheme="http://yoursite.com/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>Remove-Duplicates-from-Sorted-Array</title>
    <link href="http://yoursite.com/2018/01/15/Remove-Duplicates-from-Sorted-Array/"/>
    <id>http://yoursite.com/2018/01/15/Remove-Duplicates-from-Sorted-Array/</id>
    <published>2018-01-15T03:10:38.000Z</published>
    <updated>2018-01-15T03:15:34.174Z</updated>
    
    <content type="html"><![CDATA[<p>第84天。</p><p>All right,最终还是在期末考的时候断了。</p><p>今天的题目是<a href="https://leetcode.com/problems/remove-duplicates-from-sorted-array/description/" target="_blank" rel="noopener">Remove Duplicates from Sorted Array</a>:</p><blockquote><p>Given a sorted array, remove the duplicates in-place such that each element appear only once and return the new length.</p><p>Do not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory.</p><p>Example:</p><p>Given nums = [1,1,2],</p><p>Your function should return length = 2, with the first two elements of nums being 1 and 2 respectively. It doesn’t matter what you leave beyond the new length.</p></blockquote><p>明明是道水题，但是还是做了挺久的，而且效率也不高：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">removeDuplicates1</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> size = nums.size();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = size - <span class="number">1</span>;i &gt;= <span class="number">1</span>;i--) &#123;</span><br><span class="line">        <span class="keyword">if</span> (nums[i] == nums[i<span class="number">-1</span>]) &#123;</span><br><span class="line">            swap(nums[i],nums[--size]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(nums.begin(),nums.begin() + size);</span><br><span class="line">    <span class="keyword">return</span> size;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>说他效率不高的原因就在于最后要做一次排序。</p><p>然后是<code>dicuss</code>中给出的<code>O(n)</code>的解法：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">removeDuplicates</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (nums.size() &lt;= <span class="number">1</span>) <span class="keyword">return</span> nums.size();</span><br><span class="line">    <span class="keyword">int</span> end = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; nums.size();i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (nums[i] != nums[i<span class="number">-1</span>]) nums[end++] = nums[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> end;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;第84天。&lt;/p&gt;
&lt;p&gt;All right,最终还是在期末考的时候断了。&lt;/p&gt;
&lt;p&gt;今天的题目是&lt;a href=&quot;https://leetcode.com/problems/remove-duplicates-from-sorted-array/description
      
    
    </summary>
    
      <category term="LeetCode" scheme="http://yoursite.com/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>Judge-Route-Cicle</title>
    <link href="http://yoursite.com/2017/12/19/Judge-Route-Cicle/"/>
    <id>http://yoursite.com/2017/12/19/Judge-Route-Cicle/</id>
    <published>2017-12-19T00:20:43.000Z</published>
    <updated>2017-12-19T00:25:54.572Z</updated>
    
    <content type="html"><![CDATA[<p>第83天。</p><p>今天的题目是:<a href="https://leetcode.com/problems/judge-route-circle/description/" target="_blank" rel="noopener">Judge Route Circle</a>:</p><blockquote><p>Initially, there is a Robot at position (0, 0). Given a sequence of its moves, judge if this robot makes a circle, which means it moves back to the original place.</p><p>The move sequence is represented by a string. And each move is represent by a character. The valid robot moves are R (Right), L (Left), U (Up) and D (down). The output should be true or false representing whether the robot makes a circle.</p><p>Example 1:<br>Input: “UD”<br>Output: true<br>Example 2:<br>Input: “LL”<br>Output: false</p></blockquote><p>比较无聊的一道题目,我们只需要维护一组下标来记录所在的位置即可，然后判断移动完后是否回到了最开始的位置即可：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">judgeCircle</span><span class="params">(<span class="built_in">string</span> moves)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">0</span>, y = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> c:moves) &#123;</span><br><span class="line">        <span class="keyword">switch</span>(c)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'U'</span>: y++; <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'D'</span>: y--; <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'L'</span>: x--; <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'R'</span>: x++; <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x == <span class="number">0</span> &amp;&amp; y == <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;第83天。&lt;/p&gt;
&lt;p&gt;今天的题目是:&lt;a href=&quot;https://leetcode.com/problems/judge-route-circle/description/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Judge Route Ci
      
    
    </summary>
    
      <category term="LeetCode" scheme="http://yoursite.com/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>Intersection-of-Two-Arrays</title>
    <link href="http://yoursite.com/2017/12/18/Intersection-of-Two-Arrays/"/>
    <id>http://yoursite.com/2017/12/18/Intersection-of-Two-Arrays/</id>
    <published>2017-12-18T05:00:24.000Z</published>
    <updated>2017-12-18T05:10:13.894Z</updated>
    
    <content type="html"><![CDATA[<p>第82天。</p><p>今天的题目是<a href="https://leetcode.com/problems/intersection-of-two-arrays/description/" target="_blank" rel="noopener">Intersection of Two Arrays</a>:</p><blockquote><p>Given two arrays, write a function to compute their intersection.</p><p>Example:<br>Given nums1 = [1, 2, 2, 1], nums2 = [2, 2], return [2].</p><p>Note:<br>Each element in the result must be unique.<br>The result can be in any order.</p></blockquote><p>可以用排序做，也可以用<code>hash</code>做：</p><p>排序的做法：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; intersection(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums1, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums2) &#123;</span><br><span class="line">    sort(nums1.begin(),nums1.end());</span><br><span class="line">    sort(nums2.begin(),nums2.end());</span><br><span class="line">    <span class="keyword">auto</span> beg1 = nums1.begin();</span><br><span class="line">    <span class="keyword">auto</span> beg2 = nums2.begin();</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; ret;</span><br><span class="line">    <span class="keyword">while</span>(beg1 &lt; nums1.end() &amp;&amp; beg2 &lt; nums2.end()) &#123;</span><br><span class="line">        <span class="keyword">if</span> (*beg1 == *beg2) &#123;</span><br><span class="line">            <span class="keyword">int</span> t  = *beg1;</span><br><span class="line">            ret.push_back(t);</span><br><span class="line">            <span class="keyword">while</span>(beg1 &lt; nums1.end() &amp;&amp; *beg1 == t) beg1++;</span><br><span class="line">            <span class="keyword">while</span>(beg2 &lt; nums2.end() &amp;&amp; *beg2 == t) beg2++;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (*beg1 &lt; *beg2) beg1++;</span><br><span class="line">        <span class="keyword">else</span> beg2++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>hash</code>的做法：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; intersection1(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums1, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums2) &#123;</span><br><span class="line">    <span class="built_in">unordered_map</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; m;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; ret;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> i:nums1) m[i]++;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> i:nums2) </span><br><span class="line">        <span class="keyword">if</span> (m.find(i) != m.end() &amp;&amp; m[i]) &#123;</span><br><span class="line">            m[i] = <span class="number">0</span>;</span><br><span class="line">            ret.push_back(i);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>dicuss</code>还有用<code>set</code>做的:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; intersection(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums1, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums2) &#123;</span><br><span class="line">    <span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; s(nums1.begin(), nums1.end());</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; out;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> x : nums2)</span><br><span class="line">        <span class="keyword">if</span> (s.erase(x))</span><br><span class="line">            out.push_back(x);</span><br><span class="line">    <span class="keyword">return</span> out;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;第82天。&lt;/p&gt;
&lt;p&gt;今天的题目是&lt;a href=&quot;https://leetcode.com/problems/intersection-of-two-arrays/description/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Interse
      
    
    </summary>
    
      <category term="LeetCode" scheme="http://yoursite.com/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>Remove-Element</title>
    <link href="http://yoursite.com/2017/12/17/Remove-Element/"/>
    <id>http://yoursite.com/2017/12/17/Remove-Element/</id>
    <published>2017-12-17T02:54:14.000Z</published>
    <updated>2017-12-17T04:19:29.797Z</updated>
    
    <content type="html"><![CDATA[<p>第81天。</p><p>今天的题目是<a href="https://leetcode.com/problems/remove-element/description/" target="_blank" rel="noopener">Remove Element</a>:</p><blockquote><p>Given an array and a value, remove all instances of that value in-place and return the new length.</p><p>Do not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory.</p><p>The order of elements can be changed. It doesn’t matter what you leave beyond the new length.</p><p>Example:</p><p>Given nums = [3,2,2,3], val = 3,</p><p>Your function should return length = 2, with the first two elements of nums being 2.</p></blockquote><p>简单的我们可以遍历数组，然后找到和<code>val</code>相同的元素，然后删除，但是这样对于多个相同的元素效率不高，所以我们先不删除元素，而是把他移动到最后面去，知道遍历完才删除。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">removeElement</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> last = nums.size();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; last;i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (nums[i] == val) swap(nums[--last],nums[i--]);</span><br><span class="line">    &#125;</span><br><span class="line">    nums.erase(nums.begin() + last,nums.end());</span><br><span class="line">    <span class="keyword">return</span> nums.size();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>dicuss</code>中另一个方法也很精妙：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">removeElement</span><span class="params">(<span class="keyword">int</span> A[], <span class="keyword">int</span> n, <span class="keyword">int</span> elem)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> begin=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="keyword">if</span>(A[i]!=elem) A[begin++]=A[i];</span><br><span class="line">    <span class="keyword">return</span> begin;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;第81天。&lt;/p&gt;
&lt;p&gt;今天的题目是&lt;a href=&quot;https://leetcode.com/problems/remove-element/description/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Remove Element&lt;/a&gt;:
      
    
    </summary>
    
      <category term="LeetCode" scheme="http://yoursite.com/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
  </entry>
  
</feed>
